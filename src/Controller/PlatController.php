<?php

namespace App\Controller;

use App\Entity\Plat;
use App\Form\PlatType;
use App\Repository\PlatRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

/**
 * @Route("/")
 */
class PlatController extends AbstractController
{
    /**
     * @Route("/admin", name="index_plat", methods={"GET"})
     */
    public function index(PlatRepository $platRepository): Response
    {
        return $this->render('plat/index.html.twig', [
            'plats' => $platRepository->findAll(),
        ]);
    }

    /**
     * @Route("/admin/nouveau/plat", name="new_plat", methods={"GET","POST"})
     */
    public function new(Request $request): Response
    {
        $plat = new Plat();
        $form = $this->createForm(PlatType::class, $plat);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager = $this->getDoctrine()->getManager();

            //Pour le telechargement de fichier et crypté les fichiers télécharger
            $file = $form->get("Photo")->getData(); //Nom de la propriété à exploiter
                //Récupérer le nom du fichier
            $fileName = $this->generateUniqueFileName().'.'. $file->guessExtension();
                //Déplace le nom du fichier dans notre dossier
            $file->move($this->getParameter("uploads"), $fileName);
            $plat->setPhoto($fileName);

            $entityManager->persist($plat);
            $entityManager->flush();

            //Message flash pour notification
            $this->addFlash('success', "Le nouveau plat à été ajouté avec succès !");

            return $this->redirectToRoute('index_plat');
        }

        return $this->render('plat/new.html.twig', [
            'plat' => $plat,
            'form' => $form->createView(),
        ]);
    }

    // Hash du nom de l'image par sécurité
    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/admin/detail/plat/{id}", name="show_plat", methods={"GET"})
     */
    public function show(Plat $plat): Response
    {
        return $this->render('plat/show.html.twig', [
            'plat' => $plat,
        ]);
    }

    /**
     * @Route("/admin/modifier/plat{id}", name="edit_plat", methods={"GET","POST"})
     */
    public function edit(Request $request, Plat $plat): Response
    {
        $form = $this->createForm(PlatType::class, $plat);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {

            //Méthode similaire pour maj de la photo
            $file = $form->get("Photo")->getData(); //Nom de la propriété à exploiter
                //Récupérer le nom du fichier
            $fileName = $this->generateUniqueFileName().'.'. $file->guessExtension();
                //Déplace le nom du fichier dans notre dossier
            $file->move($this->getParameter('uploads', $fileName));
            $plat->setPhoto($fileName);

            $this->getDoctrine()->getManager()->flush();

            return $this->redirectToRoute('index_plat', [
                'id' => $plat->getId(),
            ]);
        }

        return $this->render('plat/edit.html.twig', [
            'plat' => $plat,
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route("/admin/supprimer/plat/{id}", name="delete_plat", methods={"DELETE"})
     */
    public function delete(Request $request, Plat $plat): Response
    {
        if ($this->isCsrfTokenValid('delete'.$plat->getId(), $request->request->get('_token'))) {
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->remove($plat);
            $entityManager->flush();
        }

        //Message flash pour notification
        $this->addFlash('suppression', "Le plat à été supprimé avec succès !");

        return $this->redirectToRoute('index_plat');
    }
}
